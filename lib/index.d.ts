export class Response {
    continue(message?:any)
    switchingProtocols(message?:any)
    processing(message?:any)
    earlyHints(message?:any)
    ok(message?:any)
    created(message?:any)
    accepted(message?:any)
    nonAuthoritativeInformation(message?:any)
    noContent()
    resetContent(message?:any)
    partialContent(message?:any)
    multiStatus(message?:any)
    alreadyReported(message?:any)
    imUsed(message?:any)
    multipleChoices(message?:any)
    movedPermanently(message?:any)
    found(message?:any)
    seeOther(message?:any)
    notModified(message?:any)
    useProxy(message?:any)
    temporaryRedirect(message?:any)
    permanentRedirect(message?:any)
    badRequest(message?:any)
    unauthorized(message?:any)
    paymentRequired(message?:any)
    forbidden(message?:any)
    notFound(message?:any)
    methodNotAllowed(message?:any)
    notAcceptable(message?:any)
    proxyAuthenticationRequired(message?:any)
    requestTimeout(message?:any)
    conflict(message?:any)
    gone(message?:any)
    lengthRequired(message?:any)
    preconditionFailed(message?:any)
    payloadTooLarge(message?:any)
    uriTooLong(message?:any)
    unsupportedMediaType(message?:any)
    rangeNotSatisfiable(message?:any)
    expectationFailed(message?:any)
    iMATeapot(message?:any)
    misdirectedRequest(message?:any)
    unprocessableEntity(message?:any)
    locked(message?:any)
    failedDependency(message?:any)
    unorderedCollection(message?:any)
    upgradeRequired(message?:any)
    preconditionRequired(message?:any)
    tooManyRequests(message?:any)
    requestHeaderFieldsTooLarge(message?:any)
    unavailableForLegalReasons(message?:any)
    internalServerError(message?:any)
    notImplemented(message?:any)
    badGateway(message?:any)
    serviceUnavailable(message?:any)
    gatewayTimeout(message?:any)
    httpVersionNotSupported(message?:any)
    variantAlsoNegotiates(message?:any)
    insufficientStorage(message?:any)
    loopDetected(message?:any)
    bandwidthLimitExceeded(message?:any)
    notExtended(message?:any)
    networkAuthenticationRequired(message?:any)
  }